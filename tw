-- 彩虹拖尾客户端核心逻辑（限制粒子最大大小，避免随角色过大）
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

-- 初始化变量
local player = Players.LocalPlayer
local isTrailActive = false
local trailParts = {}
local trailConnection = nil
local colorIndex = 0
local character -- 存储当前角色实例

-- 彩虹颜色数组
local rainbowColors = {
    Color3.fromRGB(255, 0, 0),
    Color3.fromRGB(255, 127, 0),
    Color3.fromRGB(255, 255, 0),
    Color3.fromRGB(0, 255, 0),
    Color3.fromRGB(0, 0, 255),
    Color3.fromRGB(75, 0, 130),
    Color3.fromRGB(148, 0, 211)
}

-- 1. 创建拖尾部件（优化：降低粒子基础大小，避免初始就偏大）
local function createTrailPart(position, color, scale)
    local part = Instance.new("Part")
    part.Name = "RainbowTrail_" .. player.Name
    part.Size = Vector3.new(2, 2, 2) * scale -- 拖尾球体随角色缩放（但受上限限制）
    part.Material = Enum.Material.Neon
    part.Color = color
    part.Anchored = true
    part.CanCollide = false
    part.Shape = Enum.PartType.Ball
    part.Position = position
    part.Parent = workspace

    -- 发光效果（光照范围随缩放，同样受上限限制）
    local pointLight = Instance.new("PointLight")
    pointLight.Color = color
    pointLight.Brightness = 2
    pointLight.Range = 10 * scale
    pointLight.Parent = part

    -- 粒子效果（核心：基础大小改为0.3，避免粒子过大）
    local attachment = Instance.new("Attachment")
    attachment.Parent = part
    local particles = Instance.new("ParticleEmitter")
    particles.Parent = attachment
    particles.Color = ColorSequence.new(color)
    -- 粒子基础大小从0.5改为0.3，再乘受上限的scale，进一步控制大小
    particles.Size = NumberSequence.new{
        NumberSequenceKeypoint.new(0, 0.3 * scale), 
        NumberSequenceKeypoint.new(1, 0)
    }
    particles.Lifetime = NumberRange.new(0.5, 1.0)
    particles.Rate = 40 * scale -- 速率稍降，避免粒子过于密集
    particles.SpreadAngle = Vector2.new(45, 45)
    particles.Speed = NumberRange.new(4 * scale, 8 * scale) -- 速度稍降，更显柔和
    particles.EmissionDirection = Enum.NormalId.Top

    return part
end

-- 2. 清理拖尾（彻底销毁，避免残留）
local function clearTrail()
    for _, part in ipairs(trailParts) do
        if part then part:Destroy() end
    end
    trailParts = {}
end

-- 3. 开始拖尾（核心：给角色缩放加固定上限，限制粒子最大大小）
local function startTrail()
    if trailConnection then return end
    character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    local lastPosition = humanoidRootPart.Position

    trailConnection = RunService.RenderStepped:Connect(function()
        if not character or not character:FindFirstChild("HumanoidRootPart") then
            stopTrail()
            return
        end

        -- 步骤1：计算角色原始缩放比例（基于HumanoidRootPart.Size）
        local currentRootPart = character.HumanoidRootPart
        local baseRootSize = 2 -- 角色初始根部件大小（默认值，可根据实际调整）
        local rawCharScale = currentRootPart.Size.X / baseRootSize
        -- 避免缩放为0或负数导致错误
        rawCharScale = rawCharScale < 0.1 and 1 or rawCharScale

        -- 步骤2：给缩放加固定上限（关键！避免粒子过大，可调整maxScale值）
        local maxScale = 3 -- 粒子最大放大倍数（角色再大，粒子也只按3倍放大）
        local charScale = math.min(rawCharScale, maxScale)

        -- （可选）若想换方案二“根号缩放”，删除步骤2，改用下面这行：
        -- local charScale = math.sqrt(rawCharScale) -- 根号削弱放大效果，无固定上限

        -- 步骤3：移动阈值随缩放适配，避免多余拖尾
        local currentPosition = currentRootPart.Position
        local distance = (currentPosition - lastPosition).Magnitude
        local moveThreshold = 0.5 * charScale

        if distance >= moveThreshold then
            colorIndex = (colorIndex % #rainbowColors) + 1
            local trailPart = createTrailPart(lastPosition, rainbowColors[colorIndex], charScale)
            table.insert(trailParts, trailPart)

            -- 消失动画（目标大小随受上限的scale，避免缩小后残留过大）
            local tween = TweenService:Create(trailPart, TweenInfo.new(2, Enum.EasingStyle.Quad), {
                Transparency = 1,
                Size = Vector3.new(0.1, 0.1, 0.1) * charScale
            })
            tween:Play()
            tween.Completed:Connect(function()
                if trailPart then trailPart:Destroy() end
                -- 从列表移除已销毁的拖尾
                for i, p in ipairs(trailParts) do
                    if p == trailPart then
                        table.remove(trailParts, i)
                        break
                    end
                end
            end)

            lastPosition = currentPosition
        end
    end)

    -- 加入原脚本清理列表，确保UI销毁时停止
    if getgenv().cleanupList and getgenv().cleanupList.connections then
        table.insert(getgenv().cleanupList.connections, trailConnection)
    end
end

-- 4. 停止拖尾（快速清理，适配缩放上限）
local function stopTrail()
    if trailConnection and trailConnection.Connected then
        trailConnection:Disconnect()
        trailConnection = nil
    end

    -- 清理现有拖尾时，同样用受上限的缩放
    local currentRootPart = character and character:FindFirstChild("HumanoidRootPart")
    local rawCharScale = currentRootPart and (currentRootPart.Size.X / 2) or 1
    rawCharScale = rawCharScale < 0.1 and 1 or rawCharScale
    local maxScale = 3
    local charScale = math.min(rawCharScale, maxScale)

    -- （可选）若用方案二，替换成：
    -- local charScale = currentRootPart and math.sqrt(currentRootPart.Size.X / 2) or 1

    for _, part in ipairs(trailParts) do
        if part and part.Parent then
            TweenService:Create(part, TweenInfo.new(0.5), {
                Transparency = 1,
                Size = Vector3.new(0.1, 0.1, 0.1) * charScale
            }):Play()
            task.delay(0.5, function() if part then part:Destroy() end end)
        end
    end
    trailParts = {}
end

-- 5. 角色重生时恢复拖尾（确保重生后仍受缩放限制）
local function onCharacterAdded(newCharacter)
    character = newCharacter
    if isTrailActive then
        newCharacter:WaitForChild("HumanoidRootPart")
        task.wait(1) -- 等待角色完全加载
        startTrail()
    end
end

-- 6. 初始化：切换拖尾状态
isTrailActive = not isTrailActive
if isTrailActive then
    startTrail()
    print("[彩虹拖尾] 已开启，粒子最大放大3倍（可在代码中调整maxScale）！")
else
    stopTrail()
    print("[彩虹拖尾] 已关闭")
end

-- 绑定角色重生事件
if player.Character then
    onCharacterAdded(player.Character)
end
player.CharacterAdded:Connect(onCharacterAdded)

-- 暴露全局停止函数，方便手动关闭
getgenv().stopRainbowTrail = stopTrail
