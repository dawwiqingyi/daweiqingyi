do local Players=game:GetService("Players");local ReplicatedStorage=game:GetService("ReplicatedStorage");local PhysicsService=game:GetService("PhysicsService");local RunService=game:GetService("RunService");local Events=ReplicatedStorage:WaitForChild("Events");local LocalPlayer=Players.LocalPlayer;local UILib=getgenv().UILibCache or loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard")) ;getgenv().UILibCache=UILib;local UI=UILib();local window=UI:NewWindow("吃吃世界");local main=window:NewSection("自动");local others=window:NewSection("其它");local autofarm=false;local autoClaimRewards=false;local autoCollectingCubes=false;local farmMoving=false;local showMap=false;local autoeat=false;local autoUpgradeSize=false;local autoUpgradeSpd=false;local autoUpgradeMulti=false;local autoUpgradeEat=false;local keepUnanchor=false;local function getRoot() return LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ;end local function randomTp(character) local pos=workspace.Map.Bedrock.Position + Vector3.new(math.random( -workspace.Map.Bedrock.Size.X/2 ,workspace.Map.Bedrock.Size.X/2 ),0,math.random( -workspace.Map.Bedrock.Size.X/2 ,workspace.Map.Bedrock.Size.X/2 )) ;character:MoveTo(pos);character:PivotTo(CFrame.new(character:GetPivot().Position,workspace.Map.Bedrock.Position));end local function changeMap() local args={{MapTime= -1,Paused=true}};Events.SetServerSettings:FireServer(unpack(args));end local function checkLoaded() return (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") and LocalPlayer.Character:FindFirstChild("Size") and LocalPlayer.Character:FindFirstChild("Events") and LocalPlayer.Character.Events:FindFirstChild("Grab") and LocalPlayer.Character.Events:FindFirstChild("Eat") and LocalPlayer.Character.Events:FindFirstChild("Sell") and LocalPlayer.Character:FindFirstChild("CurrentChunk"))~=nil ;end local function sizeGrowth(level) return math.floor(((((level + 0.5)^2) -0.25)/2) * 100 );end local function speedGrowth(level) return math.floor((level * 2) + 10 );end local function multiplierGrowth(level) return math.floor(level);end local function eatSpeedGrowth(level) return math.floor((1 + ((level-1) * 0.2)) * 10 )/10 ;end local function sizePrice(level) return math.floor((level^3)/2 ) * 20 ;end local function speedPrice(level) return math.floor(((level * 3)^3)/200 ) * 1000 ;end local function multiplierPrice(level) return math.floor(((level * 10)^3)/200 ) * 1000 ;end local function eatSpeedPrice(level) return math.floor(((level * 10)^3)/200 ) * 2000 ;end local function teleportPos() LocalPlayer.Character:PivotTo(CFrame.new(0,LocalPlayer.Character.Humanoid.HipHeight * 2 , -100) * CFrame.Angles(0,math.rad( -90),0) );end local function initCollisionGroups() pcall(function() if  not PhysicsService:IsCollisionGroupRegistered("PlayerGroup") then PhysicsService:RegisterCollisionGroup("PlayerGroup");end if  not PhysicsService:IsCollisionGroupRegistered("GroundGroup") then PhysicsService:RegisterCollisionGroup("GroundGroup");end PhysicsService:CollisionGroupSetCollidable("PlayerGroup","GroundGroup",false);end);end local function applyCharacterCollisionGroup(character) pcall(function() for _,part in ipairs(character:GetDescendants()) do if part:IsA("BasePart") then part.CollisionGroup="PlayerGroup";end end end);end main:CreateToggle("自动刷领收",function(enabled) autofarm=enabled;autoClaimRewards=enabled;autoCollectingCubes=enabled;if enabled then coroutine.wrap(function() initCollisionGroups();local text=Drawing.new("Text");text.Outline=true;text.OutlineColor=Color3.new(0,0,0);text.Color=Color3.new(1,1,1);text.Center=false;text.Position=Vector2.new(64,64);text.Text="初始化中...";text.Size=14;text.Visible=true;local startTime=tick();local eatTime=0;local lastEatTime=tick();local timer=0;local sellDebounce=false;local bedrock=Instance.new("Part");bedrock.Anchored=true;bedrock.Size=Vector3.new(2048,10,2048);bedrock.Position=Vector3.new(0, -5,0);bedrock.BrickColor=BrickColor.Black();bedrock.CanCollide=true;pcall(function() bedrock.CollisionGroup="GroundGroup";end);bedrock.Parent=workspace;local map,chunks=workspace:FindFirstChild("Map"),workspace:FindFirstChild("Chunks");if (map and chunks) then map.Parent,chunks.Parent=nil,nil;end local t=0;local hum,root,size,events,eat,grab,sell,sendTrack,chunk,autoConn;local function onCharAdd(char) hum=char:WaitForChild("Humanoid",5);root=char:WaitForChild("HumanoidRootPart",5);size=char:WaitForChild("Size",5);events=char:WaitForChild("Events",5);if  not (hum and root and size and events) then text.Text="角色加载失败！";return;end eat=events:FindFirstChild("Eat");grab=events:FindFirstChild("Grab");sell=events:FindFirstChild("Sell");sendTrack=char:FindFirstChild("SendTrack");chunk=char:FindFirstChild("CurrentChunk");if  not (eat and grab and sell) then text.Text="缺少动作事件！";return;end applyCharacterCollisionGroup(char);hum.PlatformStand=false;hum:ChangeState(Enum.HumanoidStateType.Running);autoConn=RunService.Heartbeat:Connect(function(dt) if  not (hum and root and size) then return;end local ran=tick() -startTime ;local hours=math.floor((ran/60)/60 );local minutes=math.floor(ran/60 );local seconds=math.floor(ran);local eatMinutes=math.floor(eatTime/60 );local eatSeconds=math.floor(eatTime);t+=((size.Value/LocalPlayer.Upgrades.MaxSize.Value) * dt) t=t%(256 * 256) ;local r=( -t * math.pi)%128 ;local x=math.cos(t) * r ;local z=math.sin(t) * r ;local bedrockTop=bedrock.Position.Y + (bedrock.Size.Y/2) ;local characterHeight=hum.HipHeight + root.Size.Y + 3 ;local safeY=bedrockTop + characterHeight ;if (root.Position.Y<(bedrockTop + 2)) then safeY=bedrockTop + characterHeight + 2 ;end local sizeAdd=LocalPlayer.Upgrades.Multiplier.Value/100 ;local addAmount=LocalPlayer.Upgrades.MaxSize.Value/sizeAdd ;local sellTime=addAmount/2 ;local sellMinutes=math.floor(sellTime/60 );local sellSeconds=math.floor(sellTime);local secondEarn=math.floor(sizeGrowth(LocalPlayer.Upgrades.MaxSize.Value)/sellTime );local minuteEarn=secondEarn * 60 ;local hourEarn=minuteEarn * 60 ;local dayEarn=hourEarn * 24 ;text.Text=string.format("运行中...\n"   .. "运行时间: % ih% im% is\n"   .. "实际时间: % im% is\n"   .. "大约吃满: % im% is\n"   .. "每天收益: % i" ,hours,minutes%60 ,seconds%60 ,eatMinutes%60 ,eatSeconds%60 ,sellMinutes%60 ,sellSeconds%60 ,dayEarn);pcall(function() grab:FireServer();end);pcall(function() eat:FireServer();end);if sendTrack then pcall(function() sendTrack:FireServer();end);end if (chunk and chunk.Value) then timer=0;else timer+=dt end if (((size.Value + (sizeAdd * 2))>=LocalPlayer.Upgrades.MaxSize.Value) or (timer>8)) then if (timer<8) then pcall(function() sell:FireServer();end);if  not sellDebounce then task.spawn(function() task.wait(0.5);changeMap();end);end sellDebounce=true;else changeMap();end elseif (size.Value==0) then if sellDebounce then local currentEatTime=tick();eatTime=currentEatTime-lastEatTime ;lastEatTime=currentEatTime;end sellDebounce=false;end if (farmMoving and root) then root.CFrame=CFrame.new(x,safeY,z) * CFrame.Angles(0,math.atan2(x,z) + math.pi ,0) ;else root.CFrame=CFrame.new(0,safeY,0);end end);hum.Died:Connect(function() if autoConn then autoConn:Disconnect();end changeMap();end);local chunkManager=char:FindFirstChild("LocalChunkManager");if chunkManager then chunkManager.Enabled=false;end local animate=char:FindFirstChild("Animate");if animate then animate.Enabled=false;end end if LocalPlayer.Character then task.spawn(onCharAdd,LocalPlayer.Character);else LocalPlayer.CharacterAdded:Wait();task.spawn(onCharAdd,LocalPlayer.Character);end local charAddConn=LocalPlayer.CharacterAdded:Connect(onCharAdd);while autofarm do task.wait(1);if workspace:FindFirstChild("Loading") then workspace.Loading:Destroy();end if (map and chunks) then map.Parent=(showMap and workspace) or nil ;chunks.Parent=(showMap and workspace) or nil ;end end charAddConn:Disconnect();if autoConn then autoConn:Disconnect();end if (map and chunks) then map.Parent,chunks.Parent=workspace,workspace;end if hum then hum.PlatformStand=false;hum:ChangeState(Enum.HumanoidStateType.GettingUp);end bedrock:Destroy();if LocalPlayer.Character then local chunkManager=LocalPlayer.Character:FindFirstChild("LocalChunkManager");if chunkManager then chunkManager.Enabled=true;end local animate=LocalPlayer.Character:FindFirstChild("Animate");if animate then animate.Enabled=true;end end text:Destroy();end)();end if enabled then coroutine.wrap(function() while autoClaimRewards do task.wait(5);pcall(function() for _,reward in LocalPlayer.TimedRewards:GetChildren() do if (reward.Value>0) then Events.RewardEvent:FireServer(reward);end end Events.SpinEvent:FireServer();end);end end)();end if enabled then coroutine.wrap(function() local cubeVis=LocalPlayer.PlayerScripts:FindFirstChild("CubeVis");if cubeVis then cubeVis.Enabled=false;end while autoCollectingCubes do task.wait(0.5);local root=getRoot();if root then pcall(function() for _,v in workspace:GetChildren() do if ((v.Name=="Cube") and v:FindFirstChild("Owner")) then local owner=v.Owner.Value;if ((owner==LocalPlayer.Name) or (owner=="")) then v.CFrame=root.CFrame;end end end end);end end if cubeVis then cubeVis.Enabled=true;end end)();end end);main:CreateToggle("移动模式",function(enabled) farmMoving=enabled;end);main:CreateToggle("自动升大小",function(enabled) autoUpgradeSize=enabled;coroutine.wrap(function() local purchaseGui=game.CoreGui:FindFirstChild("PurchasePromptApp");local originalEnabled=(purchaseGui and purchaseGui.Enabled) or true ;while autoUpgradeSize do task.wait(2);pcall(function() Events.PurchaseEvent:FireServer("MaxSize");end);end if purchaseGui then purchaseGui.Enabled=originalEnabled;end end)();end);main:CreateToggle("自动升移速",function(enabled) autoUpgradeSpd=enabled;coroutine.wrap(function() local purchaseGui=game.CoreGui:FindFirstChild("PurchasePromptApp");local originalEnabled=(purchaseGui and purchaseGui.Enabled) or true ;while autoUpgradeSpd do task.wait(2);pcall(function() Events.PurchaseEvent:FireServer("Speed");end);end if purchaseGui then purchaseGui.Enabled=originalEnabled;end end)();end);main:CreateToggle("显示地图",function(enabled) showMap=enabled;end);main:CreateToggle("自动吃",function(enabled) autoeat=enabled;coroutine.wrap(function() while autoeat do task.wait(0.1);if checkLoaded() then pcall(function() LocalPlayer.Character.HumanoidRootPart.Anchored=false;LocalPlayer.Character.Events.Grab:FireServer();LocalPlayer.Character.Events.Eat:FireServer();end);end end end)();end);main:CreateToggle("自动升乘数",function(enabled) autoUpgradeMulti=enabled;coroutine.wrap(function() local purchaseGui=game.CoreGui:FindFirstChild("PurchasePromptApp");local originalEnabled=(purchaseGui and purchaseGui.Enabled) or true ;while autoUpgradeMulti do task.wait(2);pcall(function() Events.PurchaseEvent:FireServer("Multiplier");end);end if purchaseGui then purchaseGui.Enabled=originalEnabled;end end)();end);main:CreateToggle("自动升吃速",function(enabled) autoUpgradeEat=enabled;coroutine.wrap(function() local purchaseGui=game.CoreGui:FindFirstChild("PurchasePromptApp");local originalEnabled=(purchaseGui and purchaseGui.Enabled) or true ;while autoUpgradeEat do task.wait(2);pcall(function() Events.PurchaseEvent:FireServer("EatSpeed");end);end if purchaseGui then purchaseGui.Enabled=originalEnabled;end end)();end);others:CreateToggle("取消锚固",function(enabled) keepUnanchor=enabled;coroutine.wrap(function() while keepUnanchor do task.wait(0.5);local root=getRoot();if root then root.Anchored=false;end end end)();end);others:CreateButton("查看玩家数据",function() local localization={MaxSize="体积",Speed="移速",Multiplier="乘数",EatSpeed="吃速"};local growthFunctions={MaxSize=sizeGrowth,Speed=speedGrowth,Multiplier=multiplierGrowth,EatSpeed=eatSpeedGrowth};local priceFunctions={MaxSize=sizePrice,Speed=speedPrice,Multiplier=multiplierPrice,EatSpeed=eatSpeedPrice};pcall(function() for _,player in Players:GetPlayers() do print("\n"   .. player.Name   .. "的数据：" );for _,upg in player.Upgrades:GetChildren() do local cost=0;for l=2,upg.Value do (cost+=priceFunctions[upg.Name](l)) or 0 end local content=string.format("% s：% i 级，% i 值，总花费：% i",localization[upg.Name] or upg.Name ,upg.Value,growthFunctions[upg.Name](upg.Value) or 0 ,cost);print(content);end end game.StarterGui:SetCore("DevConsoleVisible",true);end);end); end
